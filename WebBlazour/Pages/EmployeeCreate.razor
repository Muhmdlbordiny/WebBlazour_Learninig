@page "/employeecreate"
@using WebBlazour.Service
@inject NavigationManager Navigation
@inject IEmployeeDataService EmployeeDataService
@inject ICountryDataService CountryDataService
@inject IDepartmentDataService DepartmentDataService

<h3>Add New Employee</h3>

@if (!Saved)
{
	<EditForm Model="@CurEmp" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group row">
			<label for="firstName" class="col-form-label"> First name :</label>
			<InputText id="firstName" class="form-control" @bind-Value="@CurEmp.FirstName" />
			<ValidationMessage For="@(() => CurEmp.FirstName)" />
		</div>
		<div class="form-group row">
			<label for="lastName" class="col-form-label"> Last name :</label>
			<InputText id="lastName" class="form-control" @bind-Value="@CurEmp.LastName" />
			<ValidationMessage For="@(() => CurEmp.LastName)" />
		</div>
		<div class="form-group row">
			<label for="email" class="col-form-label"> Email :</label>
			<InputText id="email" class="form-control" @bind-Value="@CurEmp.Email" />
			<ValidationMessage For="@(() => CurEmp.Email)" />
		</div>
		<div class="form-group row">
			<label for="phone" class="col-form-label"> Phone Number :</label>
			<InputText id="phone" class="form-control" @bind-Value="@CurEmp.PhoneNumber" />
			<ValidationMessage For="@(() => CurEmp.PhoneNumber)" />
		</div>
		<div class="form-group row">
			<label for="birthdate" class="col-form-label"> birthDate  :</label>
			<InputDate id="birthdate" class="form-control" @bind-Value="@CurEmp.BirthDate" />
			<ValidationMessage For="@(() => CurEmp.BirthDate)" />
		</div>
		@if (Countries != null)
		{
			<div class="form-group row">
				<label for="country" class="col-form-label">Country :</label>
				<InputSelect id="country" class="form-control" @bind-Value="@CurEmp.CountryId">
					@foreach (var c in Countries)
					{
						<option value="@c.CountryId">@c.Name</option>
					}
				</InputSelect>
			</div>
		}
		else
		{
			<div class="form-group row">
				<label class="text-warning">Loading countries...</label>
			</div>
		}
		@if (Departments != null)
		{
			<div class="form-group row">
				<label for="dept" class="col-form-label">Department :</label>
				<InputSelect id="dept" class="form-control" @bind-Value="@CurEmp.DepartmentId">
					@foreach (var c in Departments)
					{
						<option value="@c.Id">@c.Name</option>
					}
				</InputSelect>
			</div>
		}
		else
		{
			<div class="form-group row">
				<label class="text-warning">Loading countries...</label>
			</div>
		}
		<div class="form-group row">
			<label for="gender" class="col-form-label">  Gender :</label>
			<InputSelect id="gender" class="form-control" @bind-Value="@CurEmp.MaritalStatus">
				@foreach (var status in Enum.GetValues(typeof(MaritalStatus)))
				{
					<option value="@(status)">@status</option>
				}
			</InputSelect>
			<ValidationMessage For="@(() => CurEmp.MaritalStatus)" />

		</div>
		<div class="form-group row">
			<label for="maritalstatus" class="col-form-label">  MaritalStatus :</label>
			<InputSelect id="maritalstatus" class="form-control" @bind-Value="@CurEmp.Gender">
				@foreach (var status in Enum.GetValues(typeof(Gender)))
				{
					<option value="@(status)">@status</option>
				}
				<ValidationMessage For="@(() => CurEmp.Gender)" />
			</InputSelect>

		</div>
		<div class="form-group row">
			<label for="joindate" class="col-form-label"> Joined Date  :</label>
			<InputDate id="joindate" class="form-control" @bind-Value="@CurEmp.JoinedDate" />
			<ValidationMessage For="@(() => CurEmp.JoinedDate)" />
		</div>
		<div class="form-group row">
			<label for="exitdate" class="col-form-label"> Exit Date  :</label>
			<InputDate id="exitdate" class="form-control" @bind-Value="@CurEmp.ExitDate" />
			<ValidationMessage For="@(() => CurEmp.ExitDate)" />
		</div>
		<div class="form-group row">
			<label for="notes" class="col-form-label"> Comment :</label>
			<InputTextArea id="notes" class="form-control" @bind-Value="@CurEmp.Comment" />
			<ValidationMessage For="@(() => CurEmp.Comment)" />
		</div>
		<input class="btn btn-outline-info" type="submit" value="Save" />

	</EditForm>
}
else
{
	<div class="alert alert-success">Employee added successfully! Redirecting...</div>
}

@code {
	public IEnumerable<Country> Countries;
	public IEnumerable<Department> Departments;
	protected  override async Task OnInitializedAsync()
	{
		Countries = await CountryDataService.GetAllCountry();
		Departments = await DepartmentDataService.GetAllDepartment();
		if (Countries != null && Countries.Any() && Departments !=null)
		{
			CurEmp.CountryId = Countries.First().CountryId;
			CurEmp.DepartmentId = Departments.First().Id;
		}
	}

	public Employee CurEmp = new Employee();

    protected bool Saved = false;

    private async Task HandleValidSubmit()
    {
		CurEmp.Email ??= "";
		CurEmp.PhoneNumber ??= "";
		CurEmp.Comment ??= "";
		// CurEmp.Country = null;

        await EmployeeDataService.AddEmployee(CurEmp);
        Saved = true;
        //await Task.Delay(1000);
        Navigation.NavigateTo("/employeeoverview");
    }

    private void HandleInvalidSubmit()
    {
        // Show message if needed
    }
}
